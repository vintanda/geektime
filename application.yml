shardingsphere:
  props:
    sql-show: false
  datasource:
    names: ds-0,ds-1
    ds-0:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?serverTimezone=Asia/Shanghai&characterEncoding=utf-8
      username: root
      password: '123456'
    ds-1:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?serverTimezone=Asia/Shanghai&characterEncoding=utf-8
      username: root
      password: '123456'
  rules:
    sharding:
      key-generators:
        snowflake:
          type: SNOWFLAKE
          props:
            worker-id: 103
      sharding-algorithms:
        database_inline:
          type: INLINE
          props:
            algorithm-expression: ds_${user_id % 2}
          t_order_inline:
            type: INLINE
            props:
              algorithm-expression: t_order_${order_id % 2}
          t_user_inline:
            type: INLINE
            props:
              algorithm-expression: t_user_${user_id % 2}
      tables:
        t_order:
          actualDataNodes: ds_${0..1}.t_order_${0..1}
          tableStrategy:
            standard:
              shardingColumn: order_id
              shardingAlgorithmName: t_order_inline
          keyGenerateStrategy:
            column: order_id
            keyGeneratorName: snowflake
          t_user:
            actualDataNodes: ds_${0..1}.t_user_${0..1}
            tableStrategy:
              standard:
                shardingColumn: user_id
                shardingAlgorithmName: t_user_inline
            keyGenerateStrategy:
              column: user_id
              keyGeneratorName: snowflake